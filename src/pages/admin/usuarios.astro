---
// src/pages/register.astro
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Crear Cuenta | Club Canino Dos Huellitas">
  <div class="min-h-screen bg-[#FFFBF0] flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      
      <!-- Header -->
      <div class="text-center">
        <img class="mx-auto h-20 w-auto" src="/images/logo.png" alt="Club Canino Dos Huellitas" />
        <h2 class="mt-6 text-3xl font-bold text-[#2C3E50]">
          Crear tu cuenta
        </h2>
        <p class="mt-2 text-sm text-gray-600">
          √önete a la familia Club Canino
        </p>
      </div>

      <!-- Formulario de registro -->
      <div class="bg-white rounded-xl shadow-lg p-8">
        <form id="register-form" class="space-y-6">
          
          <!-- Nombre completo -->
          <div>
            <label for="fullName" class="block text-sm font-medium text-gray-700 mb-2">
              Nombre completo
            </label>
            <input
              id="fullName"
              name="fullName"
              type="text"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#56CCF2] focus:border-transparent transition-colors"
              placeholder="Tu nombre completo"
            />
          </div>

          <!-- Email -->
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
              Correo electr√≥nico
            </label>
            <input
              id="email"
              name="email"
              type="email"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#56CCF2] focus:border-transparent transition-colors"
              placeholder="tu@email.com"
            />
          </div>

          <!-- Tel√©fono -->
          <div>
            <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">
              Tel√©fono (opcional)
            </label>
            <input
              id="phone"
              name="phone"
              type="tel"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#56CCF2] focus:border-transparent transition-colors"
              placeholder="300 123 4567"
            />
          </div>

          <!-- Contrase√±a -->
          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
              Contrase√±a
            </label>
            <div class="relative">
              <input
                id="password"
                name="password"
                type="password"
                required
                minlength="6"
                class="w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#56CCF2] focus:border-transparent transition-colors"
                placeholder="M√≠nimo 6 caracteres"
              />
              <button
                type="button"
                id="toggle-password"
                class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600"
              >
                <span id="eye-icon">üëÅÔ∏è</span>
              </button>
            </div>
          </div>

          <!-- Confirmar contrase√±a -->
          <div>
            <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-2">
              Confirmar contrase√±a
            </label>
            <input
              id="confirmPassword"
              name="confirmPassword"
              type="password"
              required
              minlength="6"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#56CCF2] focus:border-transparent transition-colors"
              placeholder="Repite tu contrase√±a"
            />
          </div>

          <!-- Error/Success messages -->
          <div id="message" class="hidden p-4 rounded-lg">
            <p id="message-text" class="text-sm"></p>
          </div>

          <!-- Bot√≥n de registro -->
          <button
            type="submit"
            id="submit-btn"
            class="w-full flex justify-center items-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-[#56CCF2] hover:bg-[#2C3E50] transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span id="btn-text">Crear mi cuenta</span>
            <div id="btn-spinner" class="hidden ml-2">
              <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
            </div>
          </button>

          <!-- Link a login -->
          <div class="text-center">
            <p class="text-sm text-gray-600">
              ¬øYa tienes cuenta? 
              <a href="/login" class="font-medium text-[#56CCF2] hover:text-[#2C3E50] transition-colors">
                Inicia sesi√≥n aqu√≠
              </a>
            </p>
          </div>

        </form>
      </div>

      <!-- Info adicional -->
      <div class="text-center">
        <div class="bg-blue-50 rounded-lg p-4">
          <div class="flex items-center justify-center mb-2">
            <span class="text-2xl">üêï</span>
          </div>
          <p class="text-sm text-blue-800 font-medium">
            Al registrarte podr√°s:
          </p>
          <ul class="text-xs text-blue-700 mt-2 space-y-1">
            <li>‚Ä¢ Evaluar a tu mascota en casa</li>
            <li>‚Ä¢ Ver el progreso en tiempo real</li>
            <li>‚Ä¢ Comunicarte con los profesores</li>
            <li>‚Ä¢ Recibir notificaciones y consejos</li>
          </ul>
        </div>
      </div>

    </div>
  </div>

  <!-- Script del formulario -->
  <script>
    import supabase from '../../lib/supabase.js';

    // ============================================
    // üéØ INTERFACES Y TIPOS
    // ============================================
    
    interface FormData {
      fullName: string;
      email: string;
      phone: string;
      password: string;
      confirmPassword: string;
    }

    interface ValidationResult {
      isValid: boolean;
      error?: string;
    }

    // ============================================
    // üéØ ELEMENTOS DEL DOM
    // ============================================
    
    const form = document.getElementById('register-form') as HTMLFormElement;
    const messageDiv = document.getElementById('message') as HTMLElement;
    const messageText = document.getElementById('message-text') as HTMLElement;
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    const btnText = document.getElementById('btn-text') as HTMLElement;
    const btnSpinner = document.getElementById('btn-spinner') as HTMLElement;
    const togglePasswordBtn = document.getElementById('toggle-password') as HTMLButtonElement;
    const passwordInput = document.getElementById('password') as HTMLInputElement;
    const eyeIcon = document.getElementById('eye-icon') as HTMLElement;

    // ============================================
    // üîí TOGGLE PASSWORD VISIBILITY
    // ============================================
    
    togglePasswordBtn?.addEventListener('click', () => {
      if (!passwordInput || !eyeIcon) return;
      
      const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
      passwordInput.setAttribute('type', type);
      eyeIcon.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üôà';
    });

    // ============================================
    // üìù FUNCIONES DE UI
    // ============================================
    
    function showMessage(text: string, type: string = 'info'): void {
      if (!messageDiv || !messageText) return;
      
      messageDiv.className = `p-4 rounded-lg ${
        type === 'error' ? 'bg-red-50 border border-red-200' :
        type === 'success' ? 'bg-green-50 border border-green-200' :
        'bg-blue-50 border border-blue-200'
      }`;
      
      messageText.className = `text-sm ${
        type === 'error' ? 'text-red-800' :
        type === 'success' ? 'text-green-800' :
        'text-blue-800'
      }`;
      
      messageText.textContent = text;
      messageDiv.classList.remove('hidden');
    }

    function hideMessage(): void {
      if (messageDiv) {
        messageDiv.classList.add('hidden');
      }
    }

    function setLoading(loading: boolean): void {
      if (!submitBtn || !btnText || !btnSpinner) return;
      
      submitBtn.disabled = loading;
      
      if (loading) {
        btnText.textContent = 'Creando cuenta...';
        btnSpinner.classList.remove('hidden');
      } else {
        btnText.textContent = 'Crear mi cuenta';
        btnSpinner.classList.add('hidden');
      }
    }

    // ============================================
    // ‚úÖ VALIDACI√ìN DEL FORMULARIO
    // ============================================
    
    function validateForm(formData: FormData): ValidationResult {
      const { fullName, email, password, confirmPassword } = formData;
      
      // Validar nombre
      if (!fullName.trim() || fullName.trim().length < 2) {
        return { isValid: false, error: 'El nombre debe tener al menos 2 caracteres' };
      }
      
      // Validar email
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(email)) {
        return { isValid: false, error: 'Por favor ingresa un email v√°lido' };
      }
      
      // Validar contrase√±a
      if (password.length < 6) {
        return { isValid: false, error: 'La contrase√±a debe tener al menos 6 caracteres' };
      }
      
      // Validar confirmaci√≥n
      if (password !== confirmPassword) {
        return { isValid: false, error: 'Las contrase√±as no coinciden' };
      }
      
      return { isValid: true };
    }

    // ============================================
    // üöÄ REGISTRO CON SUPABASE
    // ============================================
    
    async function handleRegister(formData: FormData): Promise<void> {
      try {
        setLoading(true);
        hideMessage();

        // Validar formulario
        const validation = validateForm(formData);
        if (!validation.isValid) {
          showMessage(validation.error || 'Error de validaci√≥n', 'error');
          return;
        }

        // Intentar registro en Supabase
        const { data, error } = await supabase.auth.signUp({
          email: formData.email.trim(),
          password: formData.password,
          options: {
            data: {
              full_name: formData.fullName.trim(),
              phone: formData.phone?.trim() || null
            }
          }
        });

        if (error) {
          console.error('‚ùå Error en registro:', error);
          
          // Errores comunes en espa√±ol
          let errorMessage = 'Error al crear la cuenta';
          
          if (error.message.includes('User already registered')) {
            errorMessage = 'Este email ya est√° registrado. ¬øYa tienes cuenta?';
          } else if (error.message.includes('Password should be')) {
            errorMessage = 'La contrase√±a debe tener al menos 6 caracteres';
          } else if (error.message.includes('Invalid email')) {
            errorMessage = 'Por favor ingresa un email v√°lido';
          }
          
          showMessage(errorMessage, 'error');
          return;
        }

        // Registro exitoso
        console.log('‚úÖ Usuario registrado:', data);
        
        showMessage(
          'üéâ ¬°Cuenta creada exitosamente! Revisa tu email para confirmar la cuenta.',
          'success'
        );

        // Limpiar formulario
        if (form) form.reset();

        // Redirigir a login despu√©s de unos segundos
        setTimeout(() => {
          window.location.href = '/login?registered=true';
        }, 3000);

      } catch (err: any) {
        console.error('‚ùå Error inesperado:', err);
        showMessage('Error inesperado. Por favor intenta nuevamente.', 'error');
      } finally {
        setLoading(false);
      }
    }

    // ============================================
    // üì§ MANEJO DEL FORMULARIO
    // ============================================
    
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const fullNameInput = document.getElementById('fullName') as HTMLInputElement;
      const emailInput = document.getElementById('email') as HTMLInputElement;
      const phoneInput = document.getElementById('phone') as HTMLInputElement;
      const passwordInput = document.getElementById('password') as HTMLInputElement;
      const confirmPasswordInput = document.getElementById('confirmPassword') as HTMLInputElement;
      
      if (!fullNameInput || !emailInput || !phoneInput || !passwordInput || !confirmPasswordInput) return;
      
      const formData: FormData = {
        fullName: fullNameInput.value,
        email: emailInput.value,
        phone: phoneInput.value,
        password: passwordInput.value,
        confirmPassword: confirmPasswordInput.value
      };
      
      await handleRegister(formData);
    });

    // ============================================
    // üéØ INICIALIZACI√ìN
    // ============================================
    
    document.addEventListener('DOMContentLoaded', () => {
      console.log('üöÄ P√°gina de registro cargada');
      
      // Auto-focus en el primer campo
      const fullNameInput = document.getElementById('fullName') as HTMLInputElement;
      if (fullNameInput) fullNameInput.focus();
    });
  </script>
</Layout>